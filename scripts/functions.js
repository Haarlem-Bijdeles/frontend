'use strict';

(function () {

  if (!document.querySelector('.js-contact-form')) return;

  var form = document.querySelector('.js-contact-form');
  var commentArea = form.querySelector('.js-message');
  var nameInput = form.querySelector('.js-name');
  var messageElement = document.querySelector('#feedback');

  commentArea.addEventListener('invalid', function (e) {
    e.target.setCustomValidity('');
    if (!e.target.validity.valid) {
      e.target.setCustomValidity('Vul een bericht in.');
    }
  });

  commentArea.addEventListener('input', function (e) {
    e.target.setCustomValidity('');
  });

  var autosize = function autosize() {
    var el = undefined;
    setTimeout(function () {
      el.style.cssText = 'height:auto;';
      el.style.cssText = 'height:' + (el.scrollHeight + 5) + 'px';
    }, 0);
  };

  commentArea.addEventListener('keydown', autosize);

  // send form data with JavaScript
  if (window.FormData) {
    form.addEventListener('submit', function (event) {
      var formData = new FormData(form);

      var commentValue = commentArea.value;
      var nameValue = nameInput.value;

      var xhr = new XMLHttpRequest();
      // save the comment in the database
      xhr.open('POST', site.ajaxurl, true);
      xhr.onload = function () {};

      xhr.onerror = function (error) {
        messageElement.className = 'message error';
        messageElement.textContent = 'There was an error posting the comment. Please try again.';
      };
      xhr.onprogress = function (evt) {
        messageElement.textContent = 'Uploading: ' + evt.loaded / evt.total * 100;
      };
      xhr.onloadend = function (evt) {
        messageElement.className = 'message success';
        messageElement.textContent = 'Your comment was posted sucessfully.';
      };

      xhr.send(formData);

      // always call preventDefault at the end, see: http://molily.de/javascript-failure/
      event.preventDefault();
    });
  };
})();

// import objectFit from 'object-fit';

// objectFit.polyfill({
//   selector: '.hero__image', // this can be any CSS selector
//   fittype: 'cover', // either contain, cover, fill or none
// });

(function () {
  var button = document.querySelector('.menu__trigger');
  var menu = document.querySelector('.menu__list');
  var body = document.querySelector('body');

  button.addEventListener('click', function () {
    var expanded = undefined.getAttribute('aria-expanded') === 'true';
    undefined.setAttribute('aria-expanded', String(!expanded));
    menu.classList.toggle('is-active', !expanded);
    body.classList.toggle('is-active', !expanded);
  });
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3QuanMiLCJmdW5jdGlvbnMuanMiLCJtZW51LmpzIl0sIm5hbWVzIjpbImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImZvcm0iLCJjb21tZW50QXJlYSIsIm5hbWVJbnB1dCIsIm1lc3NhZ2VFbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJzZXRDdXN0b21WYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJhdXRvc2l6ZSIsImVsIiwic2V0VGltZW91dCIsInN0eWxlIiwiY3NzVGV4dCIsInNjcm9sbEhlaWdodCIsIndpbmRvdyIsIkZvcm1EYXRhIiwiZXZlbnQiLCJmb3JtRGF0YSIsImNvbW1lbnRWYWx1ZSIsInZhbHVlIiwibmFtZVZhbHVlIiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJvcGVuIiwic2l0ZSIsImFqYXh1cmwiLCJvbmxvYWQiLCJvbmVycm9yIiwiZXJyb3IiLCJjbGFzc05hbWUiLCJ0ZXh0Q29udGVudCIsIm9ucHJvZ3Jlc3MiLCJldnQiLCJsb2FkZWQiLCJ0b3RhbCIsIm9ubG9hZGVuZCIsInNlbmQiLCJwcmV2ZW50RGVmYXVsdCIsImJ1dHRvbiIsIm1lbnUiLCJib2R5IiwiZXhwYW5kZWQiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJTdHJpbmciLCJjbGFzc0xpc3QiLCJ0b2dnbGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsQ0FBQSxZQUFBOztBQUVBLE1BQUEsQ0FBQUEsU0FBQUMsYUFBQSxDQUFBLGtCQUFBLENBQUEsRUFBQTs7QUFFQSxNQUFBQyxPQUFBRixTQUFBQyxhQUFBLENBQUEsa0JBQUEsQ0FBQTtBQUNBLE1BQUFFLGNBQUFELEtBQUFELGFBQUEsQ0FBQSxhQUFBLENBQUE7QUFDQSxNQUFBRyxZQUFBRixLQUFBRCxhQUFBLENBQUEsVUFBQSxDQUFBO0FBQ0EsTUFBQUksaUJBQUFMLFNBQUFDLGFBQUEsQ0FBQSxXQUFBLENBQUE7O0FBRUFFLGNBQUFHLGdCQUFBLENBQUEsU0FBQSxFQUFBLFVBQUFDLENBQUEsRUFBQTtBQUNBQSxNQUFBQyxNQUFBLENBQUFDLGlCQUFBLENBQUEsRUFBQTtBQUNBLFFBQUEsQ0FBQUYsRUFBQUMsTUFBQSxDQUFBRSxRQUFBLENBQUFDLEtBQUEsRUFBQTtBQUNBSixRQUFBQyxNQUFBLENBQUFDLGlCQUFBLENBQUEscUJBQUE7QUFDQTtBQUNBLEdBTEE7O0FBT0FOLGNBQUFHLGdCQUFBLENBQUEsT0FBQSxFQUFBLFVBQUFDLENBQUEsRUFBQTtBQUNBQSxNQUFBQyxNQUFBLENBQUFDLGlCQUFBLENBQUEsRUFBQTtBQUNBLEdBRkE7O0FBSUEsTUFBQUcsV0FBQSxTQUFBQSxRQUFBLEdBQUE7QUFDQSxRQUFBQyxjQUFBO0FBQ0FDLGVBQUEsWUFBQTtBQUNBRCxTQUFBRSxLQUFBLENBQUFDLE9BQUEsR0FBQSxjQUFBO0FBQ0FILFNBQUFFLEtBQUEsQ0FBQUMsT0FBQSxHQUFBLGFBQUFILEdBQUFJLFlBQUEsR0FBQSxDQUFBLElBQUEsSUFBQTtBQUNBLEtBSEEsRUFHQSxDQUhBO0FBSUEsR0FOQTs7QUFRQWQsY0FBQUcsZ0JBQUEsQ0FBQSxTQUFBLEVBQUFNLFFBQUE7O0FBRUE7QUFDQSxNQUFBTSxPQUFBQyxRQUFBLEVBQUE7QUFDQWpCLFNBQUFJLGdCQUFBLENBQUEsUUFBQSxFQUFBLFVBQUFjLEtBQUEsRUFBQTtBQUNBLFVBQUFDLFdBQUEsSUFBQUYsUUFBQSxDQUFBakIsSUFBQSxDQUFBOztBQUVBLFVBQUFvQixlQUFBbkIsWUFBQW9CLEtBQUE7QUFDQSxVQUFBQyxZQUFBcEIsVUFBQW1CLEtBQUE7O0FBRUEsVUFBQUUsTUFBQSxJQUFBQyxjQUFBLEVBQUE7QUFDQTtBQUNBRCxVQUFBRSxJQUFBLENBQUEsTUFBQSxFQUFBQyxLQUFBQyxPQUFBLEVBQUEsSUFBQTtBQUNBSixVQUFBSyxNQUFBLEdBQUEsWUFBQSxDQUVBLENBRkE7O0FBSUFMLFVBQUFNLE9BQUEsR0FBQSxVQUFBQyxLQUFBLEVBQUE7QUFDQTNCLHVCQUFBNEIsU0FBQSxHQUFBLGVBQUE7QUFDQTVCLHVCQUFBNkIsV0FBQSxHQUFBLDJEQUFBO0FBQ0EsT0FIQTtBQUlBVCxVQUFBVSxVQUFBLEdBQUEsVUFBQUMsR0FBQSxFQUFBO0FBQ0EvQix1QkFBQTZCLFdBQUEsR0FBQSxnQkFBQUUsSUFBQUMsTUFBQSxHQUFBRCxJQUFBRSxLQUFBLEdBQUEsR0FBQTtBQUNBLE9BRkE7QUFHQWIsVUFBQWMsU0FBQSxHQUFBLFVBQUFILEdBQUEsRUFBQTtBQUNBL0IsdUJBQUE0QixTQUFBLEdBQUEsaUJBQUE7QUFDQTVCLHVCQUFBNkIsV0FBQSxHQUFBLHNDQUFBO0FBQ0EsT0FIQTs7QUFLQVQsVUFBQWUsSUFBQSxDQUFBbkIsUUFBQTs7QUFFQTtBQUNBRCxZQUFBcUIsY0FBQTtBQUNBLEtBN0JBO0FBOEJBO0FBQ0EsQ0EvREE7O0FDQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FDTEEsQ0FBQSxZQUFBO0FBQ0EsTUFBQUMsU0FBQTFDLFNBQUFDLGFBQUEsQ0FBQSxnQkFBQSxDQUFBO0FBQ0EsTUFBQTBDLE9BQUEzQyxTQUFBQyxhQUFBLENBQUEsYUFBQSxDQUFBO0FBQ0EsTUFBQTJDLE9BQUE1QyxTQUFBQyxhQUFBLENBQUEsTUFBQSxDQUFBOztBQUVBeUMsU0FBQXBDLGdCQUFBLENBQUEsT0FBQSxFQUFBLFlBQUE7QUFDQSxRQUFBdUMsV0FBQSxVQUFBQyxZQUFBLENBQUEsZUFBQSxNQUFBLE1BQUE7QUFDQSxjQUFBQyxZQUFBLENBQUEsZUFBQSxFQUFBQyxPQUFBLENBQUFILFFBQUEsQ0FBQTtBQUNBRixTQUFBTSxTQUFBLENBQUFDLE1BQUEsQ0FBQSxXQUFBLEVBQUEsQ0FBQUwsUUFBQTtBQUNBRCxTQUFBSyxTQUFBLENBQUFDLE1BQUEsQ0FBQSxXQUFBLEVBQUEsQ0FBQUwsUUFBQTtBQUNBLEdBTEE7QUFNQSxDQVhBIiwiZmlsZSI6ImZ1bmN0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbIigoKSA9PiB7XG5cbiAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtY29udGFjdC1mb3JtJykpIHJldHVybjtcblxuICBjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWNvbnRhY3QtZm9ybScpO1xuICBjb25zdCBjb21tZW50QXJlYSA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmpzLW1lc3NhZ2UnKTtcbiAgY29uc3QgbmFtZUlucHV0ID0gZm9ybS5xdWVyeVNlbGVjdG9yKCcuanMtbmFtZScpO1xuICBjb25zdCBtZXNzYWdlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmZWVkYmFjaycpO1xuXG4gIGNvbW1lbnRBcmVhLmFkZEV2ZW50TGlzdGVuZXIoJ2ludmFsaWQnLCAoZSkgPT4ge1xuICAgIGUudGFyZ2V0LnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcbiAgICBpZiAoIWUudGFyZ2V0LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICBlLnRhcmdldC5zZXRDdXN0b21WYWxpZGl0eSgnVnVsIGVlbiBiZXJpY2h0IGluLicpO1xuICAgIH1cbiAgfSk7XG5cbiAgY29tbWVudEFyZWEuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoZSkgPT4ge1xuICAgIGUudGFyZ2V0LnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcbiAgfSk7XG5cbiAgY29uc3QgYXV0b3NpemUgPSAoKSA9PiB7XG4gICAgY29uc3QgZWwgPSB0aGlzO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgZWwuc3R5bGUuY3NzVGV4dCA9ICdoZWlnaHQ6YXV0bzsnO1xuICAgICAgZWwuc3R5bGUuY3NzVGV4dCA9ICdoZWlnaHQ6JyArIChlbC5zY3JvbGxIZWlnaHQgICsgNSApICsgJ3B4JztcbiAgICB9LDApO1xuICB9XG5cbiAgY29tbWVudEFyZWEuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGF1dG9zaXplKTtcblxuICAvLyBzZW5kIGZvcm0gZGF0YSB3aXRoIEphdmFTY3JpcHRcbiAgaWYgKHdpbmRvdy5Gb3JtRGF0YSkge1xuICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XG4gICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoZm9ybSk7XG5cbiAgICAgIGNvbnN0IGNvbW1lbnRWYWx1ZSA9IGNvbW1lbnRBcmVhLnZhbHVlO1xuICAgICAgY29uc3QgbmFtZVZhbHVlID0gbmFtZUlucHV0LnZhbHVlO1xuXG4gICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAvLyBzYXZlIHRoZSBjb21tZW50IGluIHRoZSBkYXRhYmFzZVxuICAgICAgeGhyLm9wZW4oJ1BPU1QnLCBzaXRlLmFqYXh1cmwsIHRydWUpO1xuICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgfTtcblxuICAgICAgeGhyLm9uZXJyb3IgPSBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgbWVzc2FnZUVsZW1lbnQuY2xhc3NOYW1lID0gJ21lc3NhZ2UgZXJyb3InO1xuICAgICAgICBtZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudCA9ICdUaGVyZSB3YXMgYW4gZXJyb3IgcG9zdGluZyB0aGUgY29tbWVudC4gUGxlYXNlIHRyeSBhZ2Fpbi4nO1xuICAgICAgfTtcbiAgICAgIHhoci5vbnByb2dyZXNzID0gZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICBtZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudCA9ICdVcGxvYWRpbmc6ICcgKyBldnQubG9hZGVkIC8gZXZ0LnRvdGFsICogMTAwO1xuICAgICAgfTtcbiAgICAgIHhoci5vbmxvYWRlbmQgPSBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgIG1lc3NhZ2VFbGVtZW50LmNsYXNzTmFtZSA9ICdtZXNzYWdlIHN1Y2Nlc3MnO1xuICAgICAgICBtZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudCA9ICdZb3VyIGNvbW1lbnQgd2FzIHBvc3RlZCBzdWNlc3NmdWxseS4nO1xuICAgICAgfTtcblxuICAgICAgeGhyLnNlbmQoZm9ybURhdGEpO1xuXG4gICAgICAvLyBhbHdheXMgY2FsbCBwcmV2ZW50RGVmYXVsdCBhdCB0aGUgZW5kLCBzZWU6IGh0dHA6Ly9tb2xpbHkuZGUvamF2YXNjcmlwdC1mYWlsdXJlL1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgfTtcbn0pKCk7XG4iLCIvLyBpbXBvcnQgb2JqZWN0Rml0IGZyb20gJ29iamVjdC1maXQnO1xuXG4vLyBvYmplY3RGaXQucG9seWZpbGwoe1xuLy8gICBzZWxlY3RvcjogJy5oZXJvX19pbWFnZScsIC8vIHRoaXMgY2FuIGJlIGFueSBDU1Mgc2VsZWN0b3Jcbi8vICAgZml0dHlwZTogJ2NvdmVyJywgLy8gZWl0aGVyIGNvbnRhaW4sIGNvdmVyLCBmaWxsIG9yIG5vbmVcbi8vIH0pO1xuIiwiKCgpID0+IHtcbiAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1lbnVfX3RyaWdnZXInKTtcbiAgY29uc3QgbWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tZW51X19saXN0Jyk7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XG5cbiAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGNvbnN0IGV4cGFuZGVkID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKSA9PT0gJ3RydWUnO1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgU3RyaW5nKCFleHBhbmRlZCkpO1xuICAgIG1lbnUuY2xhc3NMaXN0LnRvZ2dsZSgnaXMtYWN0aXZlJywgIWV4cGFuZGVkKTtcbiAgICBib2R5LmNsYXNzTGlzdC50b2dnbGUoJ2lzLWFjdGl2ZScsICFleHBhbmRlZCk7XG4gIH0pO1xufSkoKTtcbiJdfQ==
