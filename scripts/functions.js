'use strict';

(function () {

  if (!document.querySelector('.js-contact-form')) return;

  var form = document.querySelector('.js-contact-form');
  var commentArea = form.querySelector('.js-message');
  var nameInput = form.querySelector('.js-name');
  var messageElement = document.querySelector('#feedback');

  commentArea.addEventListener('invalid', function (e) {
    e.target.setCustomValidity('');
    if (!e.target.validity.valid) {
      e.target.setCustomValidity('Vul een bericht in.');
    }
  });

  commentArea.addEventListener('input', function (e) {
    e.target.setCustomValidity('');
  });

  // send form data with JavaScript
  form.addEventListener('submit', function (event) {
    var formData = {};

    if (window.FormData && false) {
      formData = new FormData(form);
    } else {
      formData = {
        action: 'submit_ajax_form',
        formkey: form.querySelector('[name=formkey]').value,
        security: form.querySelector('[name=security]').value,
        name: form.querySelector('[name=name]').value,
        email: form.querySelector('[name=email]').value,
        message: form.querySelector('[name=message]').value
      };

      var str = '';
      for (var key in formData) {
        if (str != '') {
          str += '&';
        }
        str += key + "=" + encodeURIComponent(formData[key]);
      }
      formData = str;
    }

    var xhr = new XMLHttpRequest();

    // save the comment in the database
    xhr.open('POST', site.ajaxurl, true);
    //xhr.setRequestHeader("Content-Type", "application/json");

    xhr.onload = function () {};

    xhr.onerror = function (error) {
      messageElement.className = 'message error';
      messageElement.innerHTML = 'There was an error posting the comment. Please try again.';
    };
    xhr.onprogress = function (evt) {
      messageElement.innerHTML = 'Uploading: ' + evt.loaded / evt.total * 100;
    };
    xhr.onloadend = function (evt) {
      if (xhr.readyState === 4) {
        form.className = 'message success';
        form.innerHTML = xhr.response;
      }
    };

    xhr.send(formData);

    // always call preventDefault at the end, see: http://molily.de/javascript-failure/
    event.preventDefault();
  });
})();

// import objectFit from 'object-fit';

// objectFit.polyfill({
//   selector: '.hero__image', // this can be any CSS selector
//   fittype: 'cover', // either contain, cover, fill or none
// });

(function () {
  var button = document.querySelector('.menu__trigger');
  var menu = document.querySelector('.menu__list');
  var body = document.querySelector('body');

  function toggleMenu() {
    var expanded = this.getAttribute('aria-expanded') === 'true';
    this.setAttribute('aria-expanded', String(!expanded));
    menu.classList.toggle('is-active', !expanded);
    body.classList.toggle('is-active', !expanded);
  }

  button.addEventListener('click', toggleMenu);
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3QuanMiLCJmdW5jdGlvbnMuanMiLCJtZW51LmpzIl0sIm5hbWVzIjpbImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImZvcm0iLCJjb21tZW50QXJlYSIsIm5hbWVJbnB1dCIsIm1lc3NhZ2VFbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJzZXRDdXN0b21WYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJldmVudCIsImZvcm1EYXRhIiwid2luZG93IiwiRm9ybURhdGEiLCJhY3Rpb24iLCJmb3Jta2V5IiwidmFsdWUiLCJzZWN1cml0eSIsIm5hbWUiLCJlbWFpbCIsIm1lc3NhZ2UiLCJzdHIiLCJrZXkiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzaXRlIiwiYWpheHVybCIsIm9ubG9hZCIsIm9uZXJyb3IiLCJlcnJvciIsImNsYXNzTmFtZSIsImlubmVySFRNTCIsIm9ucHJvZ3Jlc3MiLCJldnQiLCJsb2FkZWQiLCJ0b3RhbCIsIm9ubG9hZGVuZCIsInJlYWR5U3RhdGUiLCJyZXNwb25zZSIsInNlbmQiLCJwcmV2ZW50RGVmYXVsdCIsImJ1dHRvbiIsIm1lbnUiLCJib2R5IiwidG9nZ2xlTWVudSIsImV4cGFuZGVkIiwiZ2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwiU3RyaW5nIiwiY2xhc3NMaXN0IiwidG9nZ2xlIl0sIm1hcHBpbmdzIjoiOztBQUFBLENBQUEsWUFBQTs7QUFHQSxNQUFBLENBQUFBLFNBQUFDLGFBQUEsQ0FBQSxrQkFBQSxDQUFBLEVBQUE7O0FBRUEsTUFBQUMsT0FBQUYsU0FBQUMsYUFBQSxDQUFBLGtCQUFBLENBQUE7QUFDQSxNQUFBRSxjQUFBRCxLQUFBRCxhQUFBLENBQUEsYUFBQSxDQUFBO0FBQ0EsTUFBQUcsWUFBQUYsS0FBQUQsYUFBQSxDQUFBLFVBQUEsQ0FBQTtBQUNBLE1BQUFJLGlCQUFBTCxTQUFBQyxhQUFBLENBQUEs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Q0FBQSxlQUFBLEVBQUFDLE9BQUEsQ0FBQUgsUUFBQSxDQUFBO0FBQ0FILFNBQUFPLFNBQUEsQ0FBQUMsTUFBQSxDQUFBLFdBQUEsRUFBQSxDQUFBTCxRQUFBO0FBQ0FGLFNBQUFNLFNBQUEsQ0FBQUMsTUFBQSxDQUFBLFdBQUEsRUFBQSxDQUFBTCxRQUFBO0FBQ0E7O0FBRUFKLFNBQUF2QyxnQkFBQSxDQUFBLE9BQUEsRUFBQTBDLFVBQUE7QUFDQSxDQWJBIiwiZmlsZSI6ImZ1bmN0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbIigoKSA9PiB7XG5cblxuICBpZiAoIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qcy1jb250YWN0LWZvcm0nKSkgcmV0dXJuO1xuXG4gIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtY29udGFjdC1mb3JtJyk7XG4gIGNvbnN0IGNvbW1lbnRBcmVhID0gZm9ybS5xdWVyeVNlbGVjdG9yKCcuanMtbWVzc2FnZScpO1xuICBjb25zdCBuYW1lSW5wdXQgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJy5qcy1uYW1lJyk7XG4gIGNvbnN0IG1lc3NhZ2VFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZlZWRiYWNrJyk7XG5cbiAgY29tbWVudEFyZWEuYWRkRXZlbnRMaXN0ZW5lcignaW52YWxpZCcsIChlKSA9PiB7XG4gICAgZS50YXJnZXQuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgIGlmICghZS50YXJnZXQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIGUudGFyZ2V0LnNldEN1c3RvbVZhbGlkaXR5KCdWdWwgZWVuIGJlcmljaHQgaW4uJyk7XG4gICAgfVxuICB9KTtcblxuICBjb21tZW50QXJlYS5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGZ1bmN0aW9uKGUpIHtcbiAgICBlLnRhcmdldC5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XG4gIH0pO1xuXG5cbiAgLy8gc2VuZCBmb3JtIGRhdGEgd2l0aCBKYXZhU2NyaXB0XG4gIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBsZXQgZm9ybURhdGEgPSB7fTtcblxuICAgIGlmICh3aW5kb3cuRm9ybURhdGEgJiYgZmFsc2UpIHtcbiAgICAgIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGZvcm0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3JtRGF0YSA9ICh7XG4gICAgICAgIGFjdGlvbjogJ3N1Ym1pdF9hamF4X2Zvcm0nLFxuICAgICAgICBmb3Jta2V5OiBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPWZvcm1rZXldJykudmFsdWUsXG4gICAgICAgIHNlY3VyaXR5OiBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPXNlY3VyaXR5XScpLnZhbHVlLFxuICAgICAgICBuYW1lOiBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPW5hbWVdJykudmFsdWUsXG4gICAgICAgIGVtYWlsOiBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPWVtYWlsXScpLnZhbHVlLFxuICAgICAgICBtZXNzYWdlOiBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPW1lc3NhZ2VdJykudmFsdWUsXG4gICAgICB9KTtcblxuICAgICAgbGV0IHN0ciA9ICcnO1xuICAgICAgZm9yIChsZXQga2V5IGluIGZvcm1EYXRhKSB7XG4gICAgICAgICAgaWYgKHN0ciAhPSAnJykge1xuICAgICAgICAgICAgICBzdHIgKz0gJyYnO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdHIgKz0ga2V5ICsgXCI9XCIgKyBlbmNvZGVVUklDb21wb25lbnQoZm9ybURhdGFba2V5XSk7XG4gICAgICB9XG4gICAgICBmb3JtRGF0YSA9IHN0cjtcbiAgICB9XG5cblxuICAgIGNvbnN0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXG4gICAgLy8gc2F2ZSB0aGUgY29tbWVudCBpbiB0aGUgZGF0YWJhc2VcbiAgICB4aHIub3BlbignUE9TVCcsIHNpdGUuYWpheHVybCwgdHJ1ZSk7XG4gICAgLy94aHIuc2V0UmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XG5cbiAgICB4aHIub25sb2FkID0gZnVuY3Rpb24gKCkge1xuXG4gICAgfTtcblxuICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBtZXNzYWdlRWxlbWVudC5jbGFzc05hbWUgPSAnbWVzc2FnZSBlcnJvcic7XG4gICAgICBtZXNzYWdlRWxlbWVudC5pbm5lckhUTUwgPSAnVGhlcmUgd2FzIGFuIGVycm9yIHBvc3RpbmcgdGhlIGNvbW1lbnQuIFBsZWFzZSB0cnkgYWdhaW4uJztcbiAgICB9O1xuICAgIHhoci5vbnByb2dyZXNzID0gZnVuY3Rpb24gKGV2dCkge1xuICAgICAgbWVzc2FnZUVsZW1lbnQuaW5uZXJIVE1MID0gJ1VwbG9hZGluZzogJyArIGV2dC5sb2FkZWQgLyBldnQudG90YWwgKiAxMDA7XG4gICAgfTtcbiAgICB4aHIub25sb2FkZW5kID0gZnVuY3Rpb24gKGV2dCkge1xuICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09PSA0KSB7XG4gICAgICAgIGZvcm0uY2xhc3NOYW1lID0gJ21lc3NhZ2Ugc3VjY2Vzcyc7XG4gICAgICAgIGZvcm0uaW5uZXJIVE1MID0geGhyLnJlc3BvbnNlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB4aHIuc2VuZChmb3JtRGF0YSk7XG5cbiAgICAvLyBhbHdheXMgY2FsbCBwcmV2ZW50RGVmYXVsdCBhdCB0aGUgZW5kLCBzZWU6IGh0dHA6Ly9tb2xpbHkuZGUvamF2YXNjcmlwdC1mYWlsdXJlL1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH0pO1xufSkoKTtcbiIsIi8vIGltcG9ydCBvYmplY3RGaXQgZnJvbSAnb2JqZWN0LWZpdCc7XG5cbi8vIG9iamVjdEZpdC5wb2x5ZmlsbCh7XG4vLyAgIHNlbGVjdG9yOiAnLmhlcm9fX2ltYWdlJywgLy8gdGhpcyBjYW4gYmUgYW55IENTUyBzZWxlY3RvclxuLy8gICBmaXR0eXBlOiAnY292ZXInLCAvLyBlaXRoZXIgY29udGFpbiwgY292ZXIsIGZpbGwgb3Igbm9uZVxuLy8gfSk7XG4iLCIoKCkgPT4ge1xuICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudV9fdHJpZ2dlcicpO1xuICBjb25zdCBtZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1lbnVfX2xpc3QnKTtcbiAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcblxuICBmdW5jdGlvbiB0b2dnbGVNZW51KCkge1xuICAgIGNvbnN0IGV4cGFuZGVkID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKSA9PT0gJ3RydWUnO1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgU3RyaW5nKCFleHBhbmRlZCkpO1xuICAgIG1lbnUuY2xhc3NMaXN0LnRvZ2dsZSgnaXMtYWN0aXZlJywgIWV4cGFuZGVkKTtcbiAgICBib2R5LmNsYXNzTGlzdC50b2dnbGUoJ2lzLWFjdGl2ZScsICFleHBhbmRlZCk7XG4gIH1cblxuICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnbGVNZW51KTtcbn0pKCk7XG4iXX0=
